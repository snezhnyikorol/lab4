{"version":3,"sources":["fs (ignored)","crypto (ignored)","stream (ignored)","./src/environments/environment.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["/* (ignored) */","/* (ignored) */","/* (ignored) */","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import {Component} from '@angular/core';\nimport {FileSystemDirectoryEntry, FileSystemFileEntry, NgxFileDropEntry} from 'ngx-file-drop';\nimport * as XLSX from 'xlsx';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  files: NgxFileDropEntry[] = [];\n  parsedData: Array<any> = [];\n  criteria = 0;\n  dots = 0;\n  objref = Object;\n  activeId = 1;\n  maxMin: { [key: string]: boolean; } = {};\n  compromises: Array<any> = [];\n  normalized: Array<any> = [];\n  showCompromises = false;\n  showSigns = false;\n  showNormalized = false;\n  showMulti = false;\n  showMinmax = false;\n  showBest = false;\n  multi: {[key: number]: any; } = {};\n  minmax: {[key: number]: any; } = {};\n  best: {[key: number]: any; } = {};\n  compromisesRes: Array<any> = [];\n  numref = Number;\n\n  public dropped(files: NgxFileDropEntry[]): void {\n    this.files = files;\n\n    const droppedFile = files[0];\n\n    if (droppedFile.fileEntry.isFile) {\n      const fileEntry = droppedFile.fileEntry as FileSystemFileEntry;\n      fileEntry.file((file: File) => {\n        const reader = new FileReader();\n        reader.onload = (e) => {\n          // @ts-ignore\n          const data = new Uint8Array(e.target.result);\n          const workbook = XLSX.read(data, {type: 'array'});\n          this.parsedData = XLSX.utils.sheet_to_json(workbook.Sheets[workbook.SheetNames[0]], {raw: true, defval: null});\n          this.dots = this.parsedData.length;\n          this.criteria = Object.keys(this.parsedData[0]).length;\n          this.activeId = 2;\n          this.maxMin = this.newRow(true);\n          this.compromisesRes = Array(this.dots).fill(false);\n          /* DO SOMETHING WITH workbook HERE */\n        };\n        reader.readAsArrayBuffer(file);\n        // Here you can access the real file\n        console.log(droppedFile.relativePath, file);\n      });\n    } else {\n      // It was a directory (empty directories are added, otherwise only files)\n      const fileEntry = droppedFile.fileEntry as FileSystemDirectoryEntry;\n      console.log(droppedFile.relativePath, fileEntry);\n    }\n  }\n\n  refreshData(): void {\n    try {\n      this.compromisesRes = Array(this.dots).fill(false);\n      for (let i = 0; i < this.dots; i++) {\n        const newRow = this.newRow(0);\n        console.log(newRow);\n        if (i < this.parsedData.length) {\n          this.parsedData[i] = Object.assign(newRow, this.parsedData[i]);\n        } else {\n          this.parsedData.push(newRow);\n        }\n      }\n    } catch (e) {\n      console.error(e);\n    }\n  }\n\n  newRow(initValue: any): any {\n    const newRow = {};\n    for (let j = 0; j < this.criteria; j++) {\n      // @ts-ignore\n      newRow[`k${j + 1}`] = initValue;\n    }\n    return newRow;\n  }\n\n  findSigns(): void {\n    this.compromises = JSON.parse(JSON.stringify(this.parsedData));\n    for (let i = 0; i < this.dots; i++) {\n      if (this.compromisesRes[i]) {\n        delete this.compromises[i];\n      }\n    }\n    Object.keys(this.maxMin).forEach(key => {\n      if (!this.maxMin[key]) {\n        Object.keys(this.compromises).forEach(index => {\n          // this.parsedData.forEach(el => {\n          //   el[key] = -el[key];\n          // });\n          this.compromises[parseInt(index, 10)][key] = -this.compromises[parseInt(index, 10)][key];\n        });\n        this.maxMin[key] = true;\n      }\n    });\n    this.showSigns = true;\n    console.log(this.compromises);\n  }\n\n  findCompromises(): void {\n    for (let i = 0; i < this.dots; i++) {\n      if (!this.compromisesRes[i]) {\n        for (let j = i; j < this.dots; j++) {\n          if (i !== j) {\n            if (!this.compromisesRes[j]) {\n              let res = true;\n              Object.keys(this.maxMin).forEach(key => {\n                if ((this.maxMin[key] && this.parsedData[j][key] < this.parsedData[i][key])\n                  || (!this.maxMin[key] && this.parsedData[j][key] > this.parsedData[i][key])) {\n                  res = false;\n                }\n              });\n              console.log(i, j, res);\n              if (res) {\n                this.compromisesRes[j] = true;\n              }\n            }\n          }\n        }\n      }\n    }\n    this.showCompromises = true;\n  }\n\n  findNormalized(): void {\n    this.normalized = JSON.parse(JSON.stringify(this.compromises));\n    for (let i = 0; i < this.dots; i++) {\n      if (this.normalized[i] === null) {\n        delete this.normalized[i];\n      }\n    }\n    Object.keys(this.normalized).forEach(index => {\n      Object.keys(this.maxMin).forEach(key => {\n        this.normalized[parseInt(index, 10)][key] = this.normalized[parseInt(index, 10)][key] / this.getMinInColumn(this.compromises, key);\n      });\n    });\n    this.showNormalized = true;\n  }\n\n  getMinInColumn(arr: Array<any>, col: string): number {\n    let min = arr[parseInt(Object.keys(arr)[0], 10)][col];\n    Object.keys(arr).forEach(index => {\n      if (arr[parseInt(index, 10)][col] < min) {\n        min = arr[parseInt(index, 10)][col];\n      }\n    });\n    return min;\n  }\n\n  calculateMulti(): void {\n    Object.keys(this.normalized).forEach(index => {\n      let res = 1;\n      Object.keys(this.maxMin).forEach(key => {\n        res *= this.normalized[parseInt(index, 10)][key];\n      });\n      this.multi[parseInt(index, 10)] = res;\n    });\n    this.showMulti = true;\n  }\n\n  calculateMinMax(): void {\n    Object.keys(this.normalized).forEach(index => {\n      this.minmax[parseInt(index, 10)] = this.getMax(this.normalized[parseInt(index, 10)]);\n    });\n    this.showMinmax = true;\n  }\n\n  getMin(arr: any): number {\n    let min = arr[Object.keys(arr)[0]];\n    Object.keys(arr).forEach(index => {\n      if (arr[index] < min) {\n        min = arr[index];\n      }\n    });\n    return min;\n  }\n\n  getMax(arr: any): number {\n    let max = arr[Object.keys(arr)[0]];\n    Object.keys(arr).forEach(index => {\n      if (arr[index] > max) {\n        max = arr[index];\n      }\n    });\n    return max;\n  }\n\n  calculateBest(): void {\n    Object.keys(this.normalized).forEach(index => {\n      this.best[parseInt(index, 10)] = this.getCoords(this.normalized[parseInt(index, 10)]);\n    });\n    this.showBest = true;\n  }\n\n  getCoords(arr: any): number {\n    let sum = 0;\n    Object.keys(arr).forEach(index => {\n      sum += Math.pow((0 - arr[index]), 2);\n    });\n    return Math.sqrt(sum);\n  }\n\n  getIndex(value: string): number {\n    return parseInt(value, 10) + 1;\n  }\n}\n","<div class=\"container pt-5\">\n  <ul ngbNav [(activeId)]=\"activeId\" #nav=\"ngbNav\" class=\"nav-tabs\">\n    <li [ngbNavItem]=\"1\">\n      <a ngbNavLink>Upload file</a>\n      <ng-template ngbNavContent>\n        <div class=\"center mt-3\">\n          <ngx-file-drop dropZoneLabel=\"Drop files here\" (onFileDrop)=\"dropped($event)\">\n            <ng-template ngx-file-drop-content-tmp let-openFileSelector=\"openFileSelector\">\n              Drag File or\n              <button type=\"button\" class=\"btn btn-primary ml-2\" (click)=\"openFileSelector()\">Browse Files</button>\n            </ng-template>\n          </ngx-file-drop>\n          <div class=\"upload-table mt-3 mx-auto\" style=\"width: fit-content\">\n            Or simply <button type=\"button\" class=\"btn btn-primary ml-2\" (click)=\"this.activeId = 2\">Continue</button>\n          </div>\n        </div>\n      </ng-template>\n    </li>\n    <li [ngbNavItem]=\"2\">\n      <a ngbNavLink>Table</a>\n      <ng-template ngbNavContent>\n        <div class=\"row\">\n          <div class=\"form-group col-3\">\n            <label>Amount of criteria</label>\n            <input type=\"number\" class=\"form-control\" [(ngModel)]=\"criteria\" (ngModelChange)=\"refreshData()\">\n          </div>\n          <div class=\"form-group col-3\">\n            <label>Amount of dots</label>\n            <input type=\"number\" class=\"form-control\" [(ngModel)]=\"dots\" (ngModelChange)=\"refreshData()\">\n          </div>\n          <div class=\"col-3 d-flex align-items-center\">\n            <button type=\"button\" class=\"btn btn-primary ml-2\" (click)=\"this.activeId = 3\">Continue</button>\n          </div>\n        </div>\n        <ng-container *ngIf=\"parsedData.length\">\n          <table class=\"table table-striped\">\n            <thead>\n            <tr>\n              <th scope=\"col\">#</th>\n              <th style=\"cursor: pointer\" *ngFor=\"let item of objref.keys(parsedData[0])\" (click)=\"maxMin[item] = !maxMin[item]\">{{item}} <span style=\"font-size: 1.5rem\">{{maxMin[item] ? '&#8595;' : '&#8593;'}}</span></th>\n            </tr>\n            </thead>\n            <tbody>\n            <tr *ngFor=\"let item of parsedData; index as i\">\n              <th scope=\"row\">x{{ i + 1 }}</th>\n              <td *ngFor=\"let key of objref.keys(parsedData[i])\">\n                <input type=\"number\" class=\"form-control\" [(ngModel)]=\"item[key]\">\n              </td>\n            </tr>\n            </tbody>\n          </table>\n        </ng-container>\n      </ng-template>\n    </li>\n    <li [ngbNavItem]=\"3\">\n      <a ngbNavLink>Compromises</a>\n      <ng-template ngbNavContent>\n        <div class=\"row mt-2\">\n          <div class=\"col\"><button type=\"button\" class=\"btn btn-primary ml-2\" (click)=\"findCompromises()\">Calculate</button></div>\n          <div class=\"col\"><button *ngIf=\"showCompromises\" type=\"button\" class=\"btn btn-primary ml-2\" (click)=\"activeId = 4\">Continue</button></div>\n        </div>\n        <ng-container *ngIf=\"showCompromises\">\n          <table class=\"table table-striped\">\n            <thead>\n            <tr>\n              <th>Res</th>\n              <th scope=\"col\">#</th>\n              <th style=\"cursor: pointer\" *ngFor=\"let item of objref.keys(parsedData[0])\">{{item}}<span style=\"font-size: 1.5rem\">{{maxMin[item] ? '&#8595;' : '&#8593;'}}</span></th>\n            </tr>\n            </thead>\n            <tbody>\n            <tr *ngFor=\"let item of parsedData; index as i\">\n              <td>{{compromisesRes[i] ? 'A' : 'C'}}</td>\n              <th scope=\"row\">x{{ i + 1 }}</th>\n              <td *ngFor=\"let key of objref.keys(parsedData[i])\">\n                <input type=\"number\" class=\"form-control\" [(ngModel)]=\"item[key]\">\n              </td>\n            </tr>\n            </tbody>\n          </table>\n        </ng-container>\n<!--        <ng-container *ngIf=\"showCompromises\">-->\n<!--          <table class=\"table table-striped\">-->\n<!--            <thead>-->\n<!--            <tr>-->\n<!--              <th scope=\"col\">Res</th>-->\n<!--              <th scope=\"col\">#</th>-->\n<!--              <th style=\"cursor: pointer\" *ngFor=\"let item of objref.keys(compromises[0])\">{{item}} <span style=\"font-size: 1.5rem\">&#8595;</span></th>-->\n<!--            </tr>-->\n<!--            </thead>-->\n<!--            <tbody>-->\n<!--            <tr *ngFor=\"let item of compromises; index as i\">-->\n<!--              <td>A</td>-->\n<!--              <th scope=\"row\">x{{ i + 1 }}</th>-->\n<!--              <td *ngFor=\"let key of objref.keys(compromises[i])\">-->\n<!--                <input type=\"number\" class=\"form-control\" [(ngModel)]=\"item[key]\">-->\n<!--              </td>-->\n<!--            </tr>-->\n<!--            </tbody>-->\n<!--          </table>-->\n<!--        </ng-container>-->\n      </ng-template>\n    </li>\n    <li [ngbNavItem]=\"4\">\n      <a ngbNavLink>Signs</a>\n      <ng-template ngbNavContent>\n        <div class=\"row\">\n          <button type=\"button\" class=\"btn btn-primary ml-2\" (click)=\"findSigns()\">Calculate</button>\n          <button *ngIf=\"showSigns\" type=\"button\" class=\"btn btn-primary ml-2\" (click)=\"activeId = 5\">Continue</button>\n        </div>\n        <ng-container *ngIf=\"showSigns\">\n          <table class=\"table table-striped\">\n            <thead>\n            <tr>\n              <th scope=\"col\">Res</th>\n              <th scope=\"col\">#</th>\n              <th style=\"cursor: pointer\" *ngFor=\"let item of objref.keys(compromises[0])\">{{item}} <span style=\"font-size: 1.5rem\">&#8595;</span></th>\n            </tr>\n            </thead>\n            <tbody>\n            <tr *ngFor=\"let index of objref.keys(compromises)\">\n              <td>A</td>\n              <th scope=\"row\">x{{ getIndex(index) }}</th>\n              <td *ngFor=\"let key of objref.keys(compromises[numref.parseInt(index)])\">\n                <input type=\"number\" class=\"form-control\" [(ngModel)]=\"compromises[numref.parseInt(index)][key]\">\n              </td>\n            </tr>\n            </tbody>\n          </table>\n        </ng-container>\n      </ng-template>\n    </li>\n    <li [ngbNavItem]=\"5\">\n      <a ngbNavLink>Normalized</a>\n      <ng-template ngbNavContent>\n        <div class=\"row\">\n          <button type=\"button\" class=\"btn btn-primary ml-2\" (click)=\"findNormalized()\">Calculate</button>\n          <button type=\"button\" class=\"btn btn-primary ml-2\" (click)=\"calculateMulti()\">Find multi</button>\n          <button type=\"button\" class=\"btn btn-primary ml-2\" (click)=\"calculateMinMax()\">Find minmax</button>\n          <button type=\"button\" class=\"btn btn-primary ml-2\" (click)=\"calculateBest()\">Find best</button>\n        </div>\n        <ng-container *ngIf=\"showNormalized\">\n          <table class=\"table table-striped\">\n            <thead>\n            <tr>\n              <th scope=\"col\">Res</th>\n              <th scope=\"col\">#</th>\n              <th style=\"cursor: pointer\" *ngFor=\"let item of objref.keys(normalized[0])\">{{item}} <span style=\"font-size: 1.5rem\">&#8595;</span></th>\n              <th *ngIf=\"showMulti\">Km</th>\n              <th *ngIf=\"showMinmax\">minmax</th>\n              <th *ngIf=\"showBest\">R</th>\n            </tr>\n            </thead>\n            <tbody>\n            <tr *ngFor=\"let index of objref.keys(normalized)\">\n              <td>C</td>\n              <th scope=\"row\">x{{ getIndex(index) }}</th>\n              <td *ngFor=\"let key of objref.keys(normalized[numref.parseInt(index)])\">\n                <input type=\"number\" class=\"form-control\" [(ngModel)]=\"normalized[numref.parseInt(index)][key]\">\n              </td>\n              <td *ngIf=\"showMulti\" [class.green]=\"this.multi[numref.parseInt(index)] === getMin(this.multi)\">{{this.multi[numref.parseInt(index)]}}</td>\n              <td *ngIf=\"showMinmax\" [class.green]=\"this.minmax[numref.parseInt(index)] === getMin(this.minmax)\">{{this.minmax[numref.parseInt(index)]}}</td>\n              <td *ngIf=\"showMinmax\" [class.green]=\"this.best[numref.parseInt(index)] === getMin(this.best)\">{{this.best[numref.parseInt(index)]}}</td>\n            </tr>\n            </tbody>\n          </table>\n        </ng-container>\n      </ng-template>\n    </li>\n  </ul>\n  <div [ngbNavOutlet]=\"nav\"></div>\n</div>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { NgxFileDropModule } from 'ngx-file-drop';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport {NgbModule} from '@ng-bootstrap/ng-bootstrap';\nimport {FormsModule} from '@angular/forms';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    NgbModule,\n    NgxFileDropModule,\n    FormsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}